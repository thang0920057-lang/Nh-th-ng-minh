#include <ESP8266WiFi.h>

// WiFi & IoT Cloud
const char* ssid = "phongbat";
const char* password = "12345678";
const char* thingName = "my_esp8266_sensor";  // T√™n tr√™n Dweet.io

void setup() {
    Serial.begin(115200); // S·ª≠ d·ª•ng Serial ch√≠nh c·ªßa ESP8266

    // K·∫øt n·ªëi WiFi
    WiFi.begin(ssid, password);
    Serial.print("\U0001F504 ƒêang k·∫øt n·ªëi WiFi...");
    int timeout = 0;
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
        timeout++;
        if (timeout > 20) {  // N·∫øu qu√° 20 gi√¢y kh√¥ng k·∫øt n·ªëi, reset ESP8266
            Serial.println("\n\u274C Kh√¥ng th·ªÉ k·∫øt n·ªëi WiFi. Reset l·∫°i ESP8266.");
            ESP.restart();
        }
    }
    Serial.println("\n\u2705 ƒê√£ k·∫øt n·ªëi WiFi!");
    Serial.print("\U0001F4F6 ƒê·ªãa ch·ªâ IP: ");
    Serial.println(WiFi.localIP());
}

void loop() {
    if (Serial.available()) {
        String receivedData = Serial.readStringUntil('\n');  // Nh·∫≠n d·ªØ li·ªáu t·ª´ Arduino
        receivedData.trim();
        
        if (receivedData.length() > 0) {
            Serial.println("\U0001F4E5 D·ªØ li·ªáu nh·∫≠n: " + receivedData);
            
            // Lo·∫°i b·ªè c√°c k√Ω t·ª± kh√¥ng mong mu·ªën
            receivedData.replace("üì° G·ª≠i d·ªØ li·ªáu: ", "");
            
            // G·ª≠i d·ªØ li·ªáu l√™n Dweet.io d·∫°ng JSON
            sendDataToDweet(receivedData);
        }
    }
    delay(10000);  // G·ª≠i d·ªØ li·ªáu m·ªói 10 gi√¢y
}

// G·ª≠i d·ªØ li·ªáu l√™n Dweet.io d·∫°ng JSON
void sendDataToDweet(String sensorData) {
    WiFiClient client;
    if (client.connect("dweet.io", 80)) {
        String jsonPayload = "{\"sensorData\": [" + sensorData + "]}";
        String url = "/dweet/for/";
        url += thingName;

        client.print(String("POST ") + url + " HTTP/1.1\r\n" +
                     "Host: dweet.io\r\n" +
                     "Content-Type: application/json\r\n" +
                     "Content-Length: " + jsonPayload.length() + "\r\n" +
                     "Connection: close\r\n\r\n" +
                     jsonPayload);
        Serial.println("G·ª≠i d·ªØ li·ªáu JSON l√™n Dweet.io: " + jsonPayload);
        delay(1000);
        client.stop();
    } else {
        Serial.println("\u274C L·ªói k·∫øt n·ªëi Dweet.io");
    }
}